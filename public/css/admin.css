* {
    padding: 0;
    margin: 0;
}

body {
    width: 100%;
    height: auto;
    font-family: 'Montserrat', sans-serif;
    font-optical-sizing: auto;
    display: flex;
    align-items: center;
    flex-direction: column;
}

.img_view{
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
}

img {
    object-fit: contain;
    aspect-ratio: 1/1;
    width: 100%;
    height: 100%;
}

main {
    width: 100%;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.msg {
    padding: 20px;
    border-radius: 20px;
    background-color:  #98d7ee;
}

.box {
    /* border: 1px solid #7cb686; */
    border-radius: 20px;
    padding: 20px 20px 20px 0;
    width: 100%;
    display: flex;
    flex-direction: column;
}

.products-header {
    margin-top: 15px;
    border-radius: 20px;
    padding: 10px 20px 10px 20px;
    height: 40px;
    width: 80%;
    display: flex;
    backdrop-filter: blur(25px);
    align-items: center;
    position: sticky;
    justify-content: space-between;
    top: 15px;
    background: transparent;
    box-shadow: 0px 0px 10px #cbcbcb;
}

.logo-header {
    display: flex;
    align-items: center;
    gap: 10px;
}

.logo-header img {
    width: 20px;
}

.logo-header p {
    font-weight: 500;
    font-size: 20px;
}

.nav {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.nav a {
    transition: all .5s;
    text-decoration: none;
    color: #000;
    font-weight: 400;
}

.nav:has(.link:hover) .link:not(:hover) {
    opacity: 0.1;
}

/* hamburguer */
.hamburger {
    display: none;
    cursor: pointer;
}

.hamburger input {
    display: none;
}

.hamburger svg {
    color: #000;
    /* The size of the SVG defines the overall size */
    height: 2em;
    /* Define the transition for transforming the SVG */
    transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
    fill: none;
    stroke: #000;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 3;
    /* Define the transition for transforming the Stroke */
    transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
        stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line-top-bottom {
    stroke-dasharray: 12 63;
}

.hamburger input:checked+svg {
    transform: rotate(-45deg);
}

.hamburger input:checked+svg .line-top-bottom {
    stroke-dasharray: 20 300;
    stroke-dashoffset: -32.42;
}

@media screen and (max-width:575px) {
    .hamburger {
        display: flex;
    }
    .nav {display: none;}
}